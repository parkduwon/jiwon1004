spring:
  application:
    name: jiwon1004-app-member
  profiles:
#   현재 설정할 서비스 환경 프로필
    active: local
#   --- <= 이 표시로 프로필 단위를 설정 할 수 있고 프로필에 명시된 on-profile 값으로 조합해서 사용 할 수 있다.
    group:
      local: local, common
      stg: stg, common
      prod: prod, common
---
spring:
  config:
    activate:
      on-profile: local
# 디비설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost/db_jiwon1004?serverTimezone=Asia/Seoul
    username: jiwon1004
    password: qwer1234
    hikari:
      maximum-pool-size: 10
      max-lifetime: 15000
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true

# jpa 설정
  jpa:
    hibernate:
      # 도메인 엔티티의 변경사항을 서버 구동시 적용한다.
      ddl-auto: update #create update none <-이건 절대 운영환경에서는 update로 두지말라 개발바닥 유튜브를보면 대형 참사가 이 설정에 의해 일어나는지 알 수 있다.
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
    show-sql: true
    open-in-view: true
    properties:
      hibernate:
        format_sql: true
# 서버설정
server:
  #포트는 1004번이 개인적인 진리
  port: 1004
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
      force-response: true
  error:
    whitelabel:
      enabled: false

---
# 공통적으로 사용되는 설정을 모아서 그룹핑으로 사용할 수 있다.
spring:
  config:
    activate:
      on-profile: common
# json의 프리티 모드 출력
  jackson:
    serialization:
      INDENT_OUTPUT: true
# 에러처리의 핸들러가 없더라도 exeption 처리
  mvc:
    throw-exception-if-no-handler-found: true
# 로그를 알록달록하게
  output:
    ansi:
      enabled: always
